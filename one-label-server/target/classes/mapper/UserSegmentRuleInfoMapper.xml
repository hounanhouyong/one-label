<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hn.onelabel.server.infrastructure.db.mapper.UserSegmentRuleInfoMapper">

    <resultMap id="BaseResultMap" type="com.hn.onelabel.server.infrastructure.db.UserSegmentRuleInfoDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="deleted" jdbcType="TINYINT" property="deleted"/>
        <result column="segment_type" jdbcType="VARCHAR" property="segmentType"/>
        <result column="segment_name" jdbcType="VARCHAR" property="segmentName"/>
        <result column="segment_desc" jdbcType="VARCHAR" property="segmentDesc"/>
        <result column="rule_script_type" jdbcType="VARCHAR" property="ruleScriptType"/>
        <result column="rule_script_content" jdbcType="VARCHAR" property="ruleScriptContent"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="external_experiment_group_id" jdbcType="VARCHAR" property="externalExperimentGroupId"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="modifier" jdbcType="VARCHAR" property="modifier"/>
    </resultMap>

    <sql id="Base_Column_List">
        `id`,<include refid="NoPrimaryKey_Column_List"/>
    </sql>

    <sql id="NoPrimaryKey_Column_List">
        `create_time`,
        `update_time`,
        `deleted`,
        `segment_type`,
        `segment_name`,
        `segment_desc`,
        `rule_script_type`,
        `rule_script_content`,
        `status`,
        `external_experiment_group_id`,
        `creator`,
        `modifier`
    </sql>

    <sql id="NoPrimaryKey_Value_List">
        #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP},
        #{deleted,jdbcType=TINYINT},
        #{segmentType,jdbcType=VARCHAR},
        #{segmentName,jdbcType=VARCHAR},
        #{segmentDesc,jdbcType=VARCHAR},
        #{ruleScriptType,jdbcType=VARCHAR},
        #{ruleScriptContent,jdbcType=VARCHAR},
        #{status,jdbcType=VARCHAR},
        #{externalExperimentGroupId,jdbcType=VARCHAR},
        #{creator,jdbcType=VARCHAR},
        #{modifier,jdbcType=VARCHAR}
    </sql>

    <sql id="Item_NoPrimaryKey_Value_List">
        #{item.createTime,jdbcType=TIMESTAMP},
        #{item.updateTime,jdbcType=TIMESTAMP},
        #{item.deleted,jdbcType=TINYINT},
        #{item.segmentType,jdbcType=VARCHAR},
        #{item.segmentName,jdbcType=VARCHAR},
        #{item.segmentDesc,jdbcType=VARCHAR},
        #{item.ruleScriptType,jdbcType=VARCHAR},
        #{item.ruleScriptContent,jdbcType=VARCHAR},
        #{item.status,jdbcType=VARCHAR},
        #{item.externalExperimentGroupId,jdbcType=VARCHAR},
        #{item.creator,jdbcType=VARCHAR},
        #{item.modifier,jdbcType=VARCHAR}
    </sql>

    <insert id="insertEntity" useGeneratedKeys="true" keyProperty="id" parameterType="com.hn.onelabel.server.infrastructure.db.UserSegmentRuleInfoDO">
        INSERT INTO user_segment_rule_info(<include refid="NoPrimaryKey_Column_List"/>)
        VALUE (<include refid="NoPrimaryKey_Value_List"/>)
    </insert>

    <insert id="batchInsert">
        INSERT INTO user_segment_rule_info(<include refid="NoPrimaryKey_Column_List"/>)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (<include refid="Item_NoPrimaryKey_Value_List"/>)
        </foreach>
    </insert>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM user_segment_rule_info
        WHERE `id`=#{id} AND `deleted`=0
    </select>

    <select id="selectByPrimaryKeyList" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM user_segment_rule_info
        WHERE `deleted`=0 AND `id` IN
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <update id="updateByPrimaryKey" parameterType="com.hn.onelabel.server.infrastructure.db.UserSegmentRuleInfoDO">
        UPDATE user_segment_rule_info
        <set>
            <if test="updateTime != null">
                `update_time` = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                `deleted` = #{deleted,jdbcType=INTEGER},
            </if>
            <if test="segmentName != null">
                `segment_name` = #{segmentName,jdbcType=VARCHAR},
            </if>
            <if test="segmentDesc != null">
                `segment_desc` = #{segmentDesc,jdbcType=VARCHAR},
            </if>
            <if test="modifier != null">
                `modifier` = #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE `id`=#{id}
    </update>

    <delete id="logicalDeleteByPrimaryKey" parameterType="java.lang.Long">
        UPDATE user_segment_rule_info SET `deleted`=1 WHERE `id`=#{id}
    </delete>

    <delete id="physicalDeleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM user_segment_rule_info WHERE `id`=#{id}
    </delete>

    <select id="selectByCondition" parameterType="com.hn.onelabel.server.infrastructure.db.query.UserSegmentRuleInfoQuery" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM user_segment_rule_info
        WHERE deleted=0
        <if test="segmentType != null">
            AND `segment_type` = #{segmentType,jdbcType=VARCHAR}
        </if>
        <if test="status != null">
            AND `status` = #{status,jdbcType=VARCHAR}
        </if>
        <if test="externalExperimentGroupId != null">
            AND `external_experiment_group_id` = #{externalExperimentGroupId,jdbcType=VARCHAR}
        </if>
        <if test="externalExperimentGroupIdList != null">
            AND `external_experiment_group_id` IN (
            <foreach collection="externalExperimentGroupIdList" item="externalExperimentGroupId" separator=",">
                #{externalExperimentGroupId}
            </foreach>
            )
        </if>
        <if test="useSorting == true">
            ORDER BY
            <foreach collection="sortModelList" item="sortModel" separator=",">
                ${sortModel.sortField} ${sortModel.sortType}
            </foreach>
        </if>
        <if test="usePaging == true">
            LIMIT #{offset},#{rows}
        </if>
    </select>

</mapper>
